<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="37" failures="37" errors="0" time="21.725875">
	<testsuite tests="37" failures="37" time="21.726000" name="github.com/maximhq/bifrost/tests/core-providers" timestamp="2025-10-27T22:26:19-07:00">
		<properties>
			<property name="go.version" value="go1.25.1 darwin/arm64"></property>
		</properties>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/Embedding" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/Embedding&#xA;=== PAUSE TestGemini/GeminiTests/Embedding&#xA;=== CONT  TestGemini/GeminiTests/Embedding&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model text-embedding-004 and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting embedding request for provider gemini&#34;}&#xA;    response_validation.go:1286: ‚úÖ Validation passed for Embedding&#xA;    embedding.go:154: ‚úÖ Semantic coherence validated:&#xA;    embedding.go:155:    Similarity(&#39;Hello, world!&#39; vs &#39;Hi, world!&#39;): 0.937594&#xA;    embedding.go:156:    Similarity(&#39;Hello, world!&#39; vs &#39;Goodnight, moon!&#39;): 0.466651&#xA;    embedding.go:157:    Difference: 0.470943&#xA;    embedding.go:160: üìä Embedding metrics: 3 vectors, 768 dimensions each&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/MultipleToolCalls" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/MultipleToolCalls&#xA;=== PAUSE TestGemini/GeminiTests/MultipleToolCalls&#xA;=== CONT  TestGemini/GeminiTests/MultipleToolCalls&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achird" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achird&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achird&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achird&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice achird: 230926 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: achird&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisAdvanced/AllVoiceOptions" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisAdvanced/AllVoiceOptions&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion_stream request for provider gemini&#34;}&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisAdvanced/AllVoiceOptions&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests&#xA;    tests.go:24: üöÄ Running comprehensive tests for provider: gemini&#xA;    text_completion.go:17: ‚è≠Ô∏è Text completion not supported for provider gemini&#xA;    text_completion_stream.go:19: Text completion stream not supported for provider gemini&#xA;    image_url.go:18: Image URL not supported for provider gemini&#xA;    multiple_images.go:18: Multiple images not supported for provider gemini&#xA;    transcription.go:21: Transcription not supported for provider gemini&#xA;    transcription.go:196: Transcription not supported for provider gemini&#xA;    transcription_stream.go:21: Transcription streaming not supported for provider gemini&#xA;    transcription_stream.go:302: Transcription streaming not supported for provider gemini&#xA;    reasoning.go:17: ‚è≠Ô∏è Reasoning not supported for provider gemini&#xA;    tests.go:95: &#xA;        ================================================================================&#xA;    tests.go:96: COMPREHENSIVE TEST SUMMARY FOR PROVIDER: GEMINI&#xA;    tests.go:97: ================================================================================&#xA;    tests.go:105: ‚ùå UNSUPPORTED: TextCompletion            ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   SimpleChat                ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   CompletionStream          ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   MultiTurnConversation     ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   ToolCalls                 ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   MultipleToolCalls         ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   End2EndToolCalling        ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   AutomaticFunctionCall     ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: ImageURL                  ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   ImageBase64               ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: MultipleImages            ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   CompleteEnd2End           ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   SpeechSynthesis           ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   SpeechSynthesisStream     ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: Transcription             ‚ùå Not supported by provider&#xA;    tests.go:105: ‚ùå UNSUPPORTED: TranscriptionStream       ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   Embedding                 ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: Reasoning                 ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   ListModels                ‚úÖ Configured to run&#xA;    tests.go:109: --------------------------------------------------------------------------------&#xA;    tests.go:110: CONFIGURATION SUMMARY:&#xA;    tests.go:111:   ‚úÖ Supported Tests:   13&#xA;    tests.go:112:   ‚ùå Unsupported Tests: 6&#xA;    tests.go:113:   üìä Total Test Types:  19&#xA;    tests.go:114: &#xA;    tests.go:115: ‚ÑπÔ∏è  NOTE: Actual PASS/FAIL results are shown in the individual test output above.&#xA;    tests.go:116: ‚ÑπÔ∏è  Look for individual test results like &#39;PASS: TestOpenAI/SimpleChat&#39; or &#39;FAIL: TestOpenAI/ToolCalls&#39;&#xA;    tests.go:117: ================================================================================&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/CompleteEnd2End" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/CompleteEnd2End&#xA;=== PAUSE TestGemini/GeminiTests/CompleteEnd2End&#xA;=== CONT  TestGemini/GeminiTests/CompleteEnd2End&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;request embedding for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ListModelsPagination" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ListModelsPagination&#xA;=== PAUSE TestGemini/GeminiTests/ListModelsPagination&#xA;=== CONT  TestGemini/GeminiTests/ListModelsPagination&#xA;    list_models.go:125: ‚úÖ Pagination working: returned 5 models (page size: 5)&#xA;    list_models.go:130: ‚úÖ Next page token available: Ciptb2RlbHMvZ2VtaW5pLTIuNS1mbGFzaC1saXRlLXByZXZpZXctMDYtMTc=&#xA;    list_models.go:143: ‚úÖ Successfully fetched next page with 5 models&#xA;    list_models.go:150: ‚úÖ Pages contain different models (first page: gemini/embedding-gecko-001, second page: gemini/gemini-2.5-pro-preview-05-06)&#xA;    list_models.go:159: üéâ List models pagination test completed!&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini&#xA;{&#34;level&#34;:&#34;warn&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;failed to prepare provider ollama: failed to create provider for the given key: base_url is required for ollama provider&#34;}&#xA;{&#34;level&#34;:&#34;warn&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;failed to prepare provider sgl: failed to create provider for the given key: base_url is required for sgl provider&#34;}&#xA;=== RUN   TestGemini/GeminiTests&#xA;    tests.go:24: üöÄ Running comprehensive tests for provider: gemini&#xA;    text_completion.go:17: ‚è≠Ô∏è Text completion not supported for provider gemini&#xA;    text_completion_stream.go:19: Text completion stream not supported for provider gemini&#xA;    image_url.go:18: Image URL not supported for provider gemini&#xA;    multiple_images.go:18: Multiple images not supported for provider gemini&#xA;    transcription.go:21: Transcription not supported for provider gemini&#xA;    transcription.go:196: Transcription not supported for provider gemini&#xA;    transcription_stream.go:21: Transcription streaming not supported for provider gemini&#xA;    transcription_stream.go:302: Transcription streaming not supported for provider gemini&#xA;    reasoning.go:17: ‚è≠Ô∏è Reasoning not supported for provider gemini&#xA;    tests.go:95: &#xA;        ================================================================================&#xA;    tests.go:96: COMPREHENSIVE TEST SUMMARY FOR PROVIDER: GEMINI&#xA;    tests.go:97: ================================================================================&#xA;    tests.go:105: ‚ùå UNSUPPORTED: TextCompletion            ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   SimpleChat                ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   CompletionStream          ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   MultiTurnConversation     ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   ToolCalls                 ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   MultipleToolCalls         ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   End2EndToolCalling        ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   AutomaticFunctionCall     ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: ImageURL                  ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   ImageBase64               ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: MultipleImages            ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   CompleteEnd2End           ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   SpeechSynthesis           ‚úÖ Configured to run&#xA;    tests.go:102: ‚úÖ SUPPORTED:   SpeechSynthesisStream     ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: Transcription             ‚ùå Not supported by provider&#xA;    tests.go:105: ‚ùå UNSUPPORTED: TranscriptionStream       ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   Embedding                 ‚úÖ Configured to run&#xA;    tests.go:105: ‚ùå UNSUPPORTED: Reasoning                 ‚ùå Not supported by provider&#xA;    tests.go:102: ‚úÖ SUPPORTED:   ListModels                ‚úÖ Configured to run&#xA;    tests.go:109: --------------------------------------------------------------------------------&#xA;    tests.go:110: CONFIGURATION SUMMARY:&#xA;    tests.go:111:   ‚úÖ Supported Tests:   13&#xA;    tests.go:112:   ‚ùå Unsupported Tests: 6&#xA;    tests.go:113:   üìä Total Test Types:  19&#xA;    tests.go:114: &#xA;    tests.go:115: ‚ÑπÔ∏è  NOTE: Actual PASS/FAIL results are shown in the individual test output above.&#xA;    tests.go:116: ‚ÑπÔ∏è  Look for individual test results like &#39;PASS: TestOpenAI/SimpleChat&#39; or &#39;FAIL: TestOpenAI/ToolCalls&#39;&#xA;    tests.go:117: ================================================================================&#xA;=== RUN   TestGemini/GeminiTests/SimpleChat&#xA;=== PAUSE TestGemini/GeminiTests/SimpleChat&#xA;=== CONT  TestGemini/GeminiTests/SimpleChat&#xA;    response_validation.go:1286: ‚úÖ Validation passed for SimpleChat_Chat&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/ChatCompletionStream&#xA;=== PAUSE TestGemini/GeminiTests/ChatCompletionStream&#xA;=== CONT  TestGemini/GeminiTests/ChatCompletionStream&#xA;=== RUN   TestGemini/GeminiTests/ChatCompletionStreamWithTools&#xA;=== PAUSE TestGemini/GeminiTests/ChatCompletionStreamWithTools&#xA;=== CONT  TestGemini/GeminiTests/ChatCompletionStreamWithTools&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion_stream request for provider gemini&#34;}&#xA;    chat_completion_stream.go:255: üîß Testing streaming with tool calls...&#xA;    chat_completion_stream.go:303: Should receive at least one streaming response&#xA;panic: runtime error: invalid memory address or nil pointer dereference&#xA;[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x1003d7b28]&#xA;&#xA;goroutine 296 [running]:&#xA;bufio.(*Scanner).Scan(0x1400044cf18)&#xA;&#x9;/opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219 +0x718&#xA;github.com/maximhq/bifrost/core/providers/openai.HandleOpenAIChatCompletionStreaming.func1()&#xA;&#x9;/Users/akshay/Codebase/universe/bifrost/core/providers/openai/openai.go:714 +0x150&#xA;created by github.com/maximhq/bifrost/core/providers/openai.HandleOpenAIChatCompletionStreaming in goroutine 120&#xA;&#x9;/Users/akshay/Codebase/universe/bifrost/core/providers/openai/openai.go:700 +0x814&#xA;exit status 2&#xA;=== RUN   TestGemini/GeminiTests/ResponsesStream&#xA;=== PAUSE TestGemini/GeminiTests/ResponsesStream&#xA;=== CONT  TestGemini/GeminiTests/ResponsesStream&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting responses_stream request for provider gemini&#34;}&#xA;=== RUN   TestGemini/GeminiTests/ResponsesStreamWithTools&#xA;=== PAUSE TestGemini/GeminiTests/ResponsesStreamWithTools&#xA;=== RUN   TestGemini/GeminiTests/MultiTurnConversation&#xA;=== PAUSE TestGemini/GeminiTests/MultiTurnConversation&#xA;=== CONT  TestGemini/GeminiTests/MultiTurnConversation&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;    response_validation.go:1286: ‚úÖ Validation passed for MultiTurnConversation_Step1&#xA;    multi_turn_conversation.go:80: ‚úÖ First turn acknowledged: Hello Alice! It&#39;s nice to meet you. How can I help you today?&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/ToolCalls&#xA;=== PAUSE TestGemini/GeminiTests/ToolCalls&#xA;=== CONT  TestGemini/GeminiTests/ToolCalls&#xA;=== RUN   TestGemini/GeminiTests/MultipleToolCalls&#xA;=== PAUSE TestGemini/GeminiTests/MultipleToolCalls&#xA;=== CONT  TestGemini/GeminiTests/MultipleToolCalls&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;=== RUN   TestGemini/GeminiTests/End2EndToolCalling&#xA;=== PAUSE TestGemini/GeminiTests/End2EndToolCalling&#xA;=== CONT  TestGemini/GeminiTests/End2EndToolCalling&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;=== RUN   TestGemini/GeminiTests/AutomaticFunctionCalling&#xA;=== PAUSE TestGemini/GeminiTests/AutomaticFunctionCalling&#xA;=== CONT  TestGemini/GeminiTests/AutomaticFunctionCalling&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/ImageBase64&#xA;=== PAUSE TestGemini/GeminiTests/ImageBase64&#xA;=== CONT  TestGemini/GeminiTests/ImageBase64&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/CompleteEnd2End&#xA;=== PAUSE TestGemini/GeminiTests/CompleteEnd2End&#xA;=== CONT  TestGemini/GeminiTests/CompleteEnd2End&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;request embedding for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesis&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesis&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisAdvanced&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisAdvanced&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisAdvanced&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStream&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/LongText_HDModel_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/LongText_HDModel_Streaming&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/LongText_HDModel_Streaming&#xA;    speech_synthesis_stream.go:242: Skipping LongText_HDModel_Streaming test&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achernar&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achernar&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achernar&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice achernar: 217486 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: achernar&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achird&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achird&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achird&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:19-07:00&#34;,&#34;message&#34;:&#34;attempting speech_stream request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice achird: 230926 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: achird&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_algenib&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_algenib&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_algenib&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice algenib: 275086 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: algenib&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_charon&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_charon&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_charon&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice charon: 144526 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: charon&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_despina&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_despina&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_despina&#xA;    speech_synthesis_stream.go:440: ‚ùå Should receive audio data for voice despina&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: despina&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_erinome&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_erinome&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_erinome&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice erinome: 142606 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: erinome&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/Embedding&#xA;=== PAUSE TestGemini/GeminiTests/Embedding&#xA;=== CONT  TestGemini/GeminiTests/Embedding&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model text-embedding-004 and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting embedding request for provider gemini&#34;}&#xA;    response_validation.go:1286: ‚úÖ Validation passed for Embedding&#xA;    embedding.go:154: ‚úÖ Semantic coherence validated:&#xA;    embedding.go:155:    Similarity(&#39;Hello, world!&#39; vs &#39;Hi, world!&#39;): 0.937594&#xA;    embedding.go:156:    Similarity(&#39;Hello, world!&#39; vs &#39;Goodnight, moon!&#39;): 0.466651&#xA;    embedding.go:157:    Difference: 0.470943&#xA;    embedding.go:160: üìä Embedding metrics: 3 vectors, 768 dimensions each&#xA;=== RUN   TestGemini/GeminiTests/ListModels&#xA;=== PAUSE TestGemini/GeminiTests/ListModels&#xA;=== CONT  TestGemini/GeminiTests/ListModels&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;    list_models.go:47: ‚úÖ List models returned 66 models&#xA;    list_models.go:59:    Model 1: ID=gemini/embedding-gecko-001&#xA;    list_models.go:59:    Model 2: ID=gemini/gemini-2.5-pro-preview-03-25&#xA;    list_models.go:59:    Model 3: ID=gemini/gemini-2.5-flash-preview-05-20&#xA;    list_models.go:59:    Model 4: ID=gemini/gemini-2.5-flash&#xA;    list_models.go:59:    Model 5: ID=gemini/gemini-2.5-flash-lite-preview-06-17&#xA;    list_models.go:69: ‚úÖ Validated 66 models with proper structure&#xA;    list_models.go:86: ‚úÖ Request latency: 129 ms&#xA;    list_models.go:89: üéâ List models test passed successfully!&#xA;=== RUN   TestGemini/GeminiTests/ListModelsPagination&#xA;=== PAUSE TestGemini/GeminiTests/ListModelsPagination&#xA;=== CONT  TestGemini/GeminiTests/ListModelsPagination&#xA;    list_models.go:125: ‚úÖ Pagination working: returned 5 models (page size: 5)&#xA;    list_models.go:130: ‚úÖ Next page token available: Ciptb2RlbHMvZ2VtaW5pLTIuNS1mbGFzaC1saXRlLXByZXZpZXctMDYtMTc=&#xA;    list_models.go:143: ‚úÖ Successfully fetched next page with 5 models&#xA;    list_models.go:150: ‚úÖ Pages contain different models (first page: gemini/embedding-gecko-001, second page: gemini/gemini-2.5-pro-preview-05-06)&#xA;    list_models.go:159: üéâ List models pagination test completed!&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisAdvanced/LongText_HDModel&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisAdvanced/LongText_HDModel&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisAdvanced/AllVoiceOptions&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion_stream request for provider gemini&#34;}&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisAdvanced/AllVoiceOptions&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream/ShortText_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream/ShortText_Streaming&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream/LongText_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream/LongText_Streaming&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream/MediumText_Echo_WAV&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream/MediumText_Echo_WAV&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesis/BasicText_Primary_MP3&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis/BasicText_Primary_MP3&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesis/MediumText_Secondary_MP3&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis/MediumText_Secondary_MP3&#xA;=== RUN   TestGemini/GeminiTests/SpeechSynthesis/TechnicalText_Tertiary_MP3&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis/TechnicalText_Tertiary_MP3&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ResponsesStream" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ResponsesStream&#xA;=== PAUSE TestGemini/GeminiTests/ResponsesStream&#xA;=== CONT  TestGemini/GeminiTests/ResponsesStream&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting responses_stream request for provider gemini&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_charon" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_charon&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_charon&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_charon&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice charon: 144526 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: charon&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_despina" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_despina&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_despina&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_despina&#xA;    speech_synthesis_stream.go:440: ‚ùå Should receive audio data for voice despina&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: despina&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisAdvanced/LongText_HDModel" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisAdvanced/LongText_HDModel&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisAdvanced/LongText_HDModel&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SimpleChat" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SimpleChat&#xA;=== PAUSE TestGemini/GeminiTests/SimpleChat&#xA;=== CONT  TestGemini/GeminiTests/SimpleChat&#xA;    response_validation.go:1286: ‚úÖ Validation passed for SimpleChat_Chat&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_algenib" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_algenib&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_algenib&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_algenib&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice algenib: 275086 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: algenib&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStream/ShortText_Streaming" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream/ShortText_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream/ShortText_Streaming&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStream/MediumText_Echo_WAV" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream/MediumText_Echo_WAV&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream/MediumText_Echo_WAV&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ChatCompletionStream" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ChatCompletionStream&#xA;=== PAUSE TestGemini/GeminiTests/ChatCompletionStream&#xA;=== CONT  TestGemini/GeminiTests/ChatCompletionStream&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesis" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesis&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesis&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/LongText_HDModel_Streaming" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/LongText_HDModel_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/LongText_HDModel_Streaming&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/LongText_HDModel_Streaming&#xA;    speech_synthesis_stream.go:242: Skipping LongText_HDModel_Streaming test&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achernar" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achernar&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achernar&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_achernar&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice achernar: 217486 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: achernar&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:23-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ChatCompletionStreamWithTools" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ChatCompletionStreamWithTools&#xA;=== PAUSE TestGemini/GeminiTests/ChatCompletionStreamWithTools&#xA;=== CONT  TestGemini/GeminiTests/ChatCompletionStreamWithTools&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion_stream request for provider gemini&#34;}&#xA;    chat_completion_stream.go:255: üîß Testing streaming with tool calls...&#xA;    chat_completion_stream.go:303: Should receive at least one streaming response&#xA;panic: runtime error: invalid memory address or nil pointer dereference&#xA;[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x1003d7b28]&#xA;&#xA;goroutine 296 [running]:&#xA;bufio.(*Scanner).Scan(0x1400044cf18)&#xA;&#x9;/opt/homebrew/Cellar/go/1.25.1/libexec/src/bufio/scan.go:219 +0x718&#xA;github.com/maximhq/bifrost/core/providers/openai.HandleOpenAIChatCompletionStreaming.func1()&#xA;&#x9;/Users/akshay/Codebase/universe/bifrost/core/providers/openai/openai.go:714 +0x150&#xA;created by github.com/maximhq/bifrost/core/providers/openai.HandleOpenAIChatCompletionStreaming in goroutine 120&#xA;&#x9;/Users/akshay/Codebase/universe/bifrost/core/providers/openai/openai.go:700 +0x814&#xA;exit status 2&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/End2EndToolCalling" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/End2EndToolCalling&#xA;=== PAUSE TestGemini/GeminiTests/End2EndToolCalling&#xA;=== CONT  TestGemini/GeminiTests/End2EndToolCalling&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_erinome" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_erinome&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_erinome&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStreamAdvanced/MultipleVoices_Streaming/StreamingVoice_erinome&#xA;    speech_synthesis_stream.go:431: ‚úÖ Received data for voice erinome: 142606 bytes&#xA;    speech_synthesis_stream.go:445: ‚úÖ Streaming successful for voice: erinome&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;request speech_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:22-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesis/TechnicalText_Tertiary_MP3" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesis/TechnicalText_Tertiary_MP3&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis/TechnicalText_Tertiary_MP3&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/MultiTurnConversation" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/MultiTurnConversation&#xA;=== PAUSE TestGemini/GeminiTests/MultiTurnConversation&#xA;=== CONT  TestGemini/GeminiTests/MultiTurnConversation&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;    response_validation.go:1286: ‚úÖ Validation passed for MultiTurnConversation_Step1&#xA;    multi_turn_conversation.go:80: ‚úÖ First turn acknowledged: Hello Alice! It&#39;s nice to meet you. How can I help you today?&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;attempting responses request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion_stream for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/AutomaticFunctionCalling" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/AutomaticFunctionCalling&#xA;=== PAUSE TestGemini/GeminiTests/AutomaticFunctionCalling&#xA;=== CONT  TestGemini/GeminiTests/AutomaticFunctionCalling&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ImageBase64" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ImageBase64&#xA;=== PAUSE TestGemini/GeminiTests/ImageBase64&#xA;=== CONT  TestGemini/GeminiTests/ImageBase64&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;Primary provider gemini with model gemini-2.0-flash and 0 fallbacks&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;request chat_completion for provider gemini completed&#34;}&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:41-07:00&#34;,&#34;message&#34;:&#34;No primary error, we should not try fallbacks&#34;}&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisAdvanced" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisAdvanced&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisAdvanced&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisAdvanced&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ListModels" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ListModels&#xA;=== PAUSE TestGemini/GeminiTests/ListModels&#xA;=== CONT  TestGemini/GeminiTests/ListModels&#xA;{&#34;level&#34;:&#34;debug&#34;,&#34;time&#34;:&#34;2025-10-27T22:26:40-07:00&#34;,&#34;message&#34;:&#34;attempting chat_completion request for provider gemini&#34;}&#xA;    list_models.go:47: ‚úÖ List models returned 66 models&#xA;    list_models.go:59:    Model 1: ID=gemini/embedding-gecko-001&#xA;    list_models.go:59:    Model 2: ID=gemini/gemini-2.5-pro-preview-03-25&#xA;    list_models.go:59:    Model 3: ID=gemini/gemini-2.5-flash-preview-05-20&#xA;    list_models.go:59:    Model 4: ID=gemini/gemini-2.5-flash&#xA;    list_models.go:59:    Model 5: ID=gemini/gemini-2.5-flash-lite-preview-06-17&#xA;    list_models.go:69: ‚úÖ Validated 66 models with proper structure&#xA;    list_models.go:86: ‚úÖ Request latency: 129 ms&#xA;    list_models.go:89: üéâ List models test passed successfully!&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStream/LongText_Streaming" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream/LongText_Streaming&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream/LongText_Streaming&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesis/BasicText_Primary_MP3" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesis/BasicText_Primary_MP3&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis/BasicText_Primary_MP3&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ResponsesStreamWithTools" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ResponsesStreamWithTools&#xA;=== PAUSE TestGemini/GeminiTests/ResponsesStreamWithTools&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/ToolCalls" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/ToolCalls&#xA;=== PAUSE TestGemini/GeminiTests/ToolCalls&#xA;=== CONT  TestGemini/GeminiTests/ToolCalls&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesisStream" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesisStream&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesisStream&#xA;=== CONT  TestGemini/GeminiTests/SpeechSynthesisStream&#xA;</failure>
		</testcase>
		<testcase classname="github.com/maximhq/bifrost/tests/core-providers" name="TestGemini/GeminiTests/SpeechSynthesis/MediumText_Secondary_MP3" time="-0.000000">
			<failure message="Failed" type="">=== RUN   TestGemini/GeminiTests/SpeechSynthesis/MediumText_Secondary_MP3&#xA;=== PAUSE TestGemini/GeminiTests/SpeechSynthesis/MediumText_Secondary_MP3&#xA;</failure>
		</testcase>
	</testsuite>
</testsuites>